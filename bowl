
    _G.auto2 = false
    _G.auto1 = false
    _G.auto3 = false
    local petshop = 28
    local armtrainer = "25_4"
    local legtrainer =100

    local task_defer = task.defer
    function testremote()
        local args = {
            [1] = 1.35
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameService"):WaitForChild("RF"):WaitForChild("InFightClick"):InvokeServer(unpack(args))
        while _G.auto1 do
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameService"):WaitForChild("RE"):WaitForChild("GetPKMoney"):FireServer()
            task.wait()
        end
    end

    function testremote2()
        while _G.auto2 do

            local args = {
                [1] = armtrainer
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("DumbbellService"):WaitForChild("RF"):WaitForChild("EquipDumbbell"):InvokeServer(unpack(args))
            

            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ClickService"):WaitForChild("RF"):WaitForChild("Click"):InvokeServer()
            local args = {
                [1] = legtrainer
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("TrainService"):WaitForChild("RF"):WaitForChild("PlayerExercise"):InvokeServer(unpack(args))
            task.wait()
        end
    end
    function testremote3()
        while _G.auto3 do
            --pet 
            local args = {
                [1] = petshop
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("PetLuckService"):WaitForChild("RF"):WaitForChild("LuckOnce"):InvokeServer(unpack(args))
            --equip best 
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("PetBagService"):WaitForChild("RF"):WaitForChild("EquipBestPet"):InvokeServer()
            task.wait()
        end
    end

    local library = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/0x"))()

    local w1 = library:Window("bowl",Vector2.new(500,500)) -- Text

    w1:Toggle(
        "kill ",
        "Power",
        false,
        function(toggled)
            _G.auto1 = toggled
            task_defer(testremote())
        end
    )
    w1:Toggle(
        " train",
        "Power",
        false,
        function(toggled)
            _G.auto2 = toggled
            task_defer(testremote2())
        end
    )
    w1:Toggle(
        "egg ",
        "Power",
        false,
        function(toggled)
            _G.auto3 = toggled
            task_defer(testremote3())
        end
    )
    w1:Button(
        "1",
        function()
            local args = {
                [1] = 2
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("MapService"):WaitForChild("RF"):WaitForChild("GoMap"):InvokeServer(unpack(args))
        end
    )
    w1:Button(
        "6",
        function()
            local args = {
                [1] = 6
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("MapService"):WaitForChild("RF"):WaitForChild("GoMap"):InvokeServer(unpack(args))
        end
    )
    w1:Button(
        "25",
        function()
            local args = {
                [1] = 25
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("MapService"):WaitForChild("RF"):WaitForChild("GoMap"):InvokeServer(unpack(args))
        end
    ) -- Text, Callback


    w1:Button(
        "Destroy GUI",
        function()
            for i, v in pairs(game.CoreGui:GetChildren()) do
                if v:FindFirstChild("Top") then
                    v:Destroy()
                end
            end
        end
    ) -- Text, Callback


